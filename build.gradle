/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3.1/userguide/tutorial_java_projects.html
 */
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'edu.sc.seis.gradle:launch4j:2.4.4'
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
    }
}

apply plugin: 'edu.sc.seis.launch4j'
apply plugin: 'com.github.johnrengelman.shadow'

//section definied for root project and all subprojects
allprojects {

    apply plugin: 'idea'
    // Apply the java plugin to add support for Java
    apply plugin: 'java'
    // To define main class we need to apply 'application' plugin
    apply plugin:'application'

    // In this section you declare where to find the dependencies of your project
    repositories {
        // Use 'jcenter' for resolving your dependencies for root project and all subprojects.
        // You can declare any Maven/Ivy/file repository here.
        jcenter()
    }
}

mainClassName = "app.Main" //app is package name instead of "sample"

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile files('libs/controlsfx-8.40.12/controlsfx-8.40.12.jar')
    compile files('libs/controlsfx-8.40.12/fxsampler-1.0.9.jar')
    compile files('libs/richtextfx/richtextfx-fat-0.7-M5.jar')

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

sourceSets {
    main {
        resources {
            srcDir 'src/main/resources'
            srcDir 'src/main/resources/logo'
            srcDir 'src/main/resources/view'
        }
    }
}


/*task copyResources(type: Copy) {
    from 'src/main/resources/'
    into "${buildDir}/distribution_package/resources"
}

createExe.dependsOn copyResources*/

shadowJar {
    mergeServiceFiles()
    baseName = 'LanguageMemo'
    classifier = null
    version = null
    manifest {
        attributes(
                'Main-Class': mainClassName,
                'version': project.version,
        )
    }
}
//project.tasks.assemble.dependsOn project.tasks.shadowJar


launch4j {
    outputDir = 'distribution_package'
    outfile = 'LanguageMemo.exe'
    mainClassName = 'app.Main'
    copyConfigurable = shadowJar.outputs.files
    jar = "lib/${project.tasks.shadowJar.archiveName}"
    icon = "${projectDir}/src/main/resources/logo/LM.ico"
    bundledJrePath = System.getProperty("java.home")
    bundledJre64Bit = true
}
